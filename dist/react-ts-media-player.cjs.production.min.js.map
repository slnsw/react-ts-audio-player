{"version":3,"file":"react-ts-media-player.cjs.production.min.js","sources":["../src/Util/CollapseArrayProperty.ts","../src/SrOnly.tsx","../src/Util/CssClasses.ts","../src/ActionButton.tsx","../src/Util/Numbers.ts","../src/ScrubBar.tsx","../src/SubtitleContainer.tsx","../src/Menu.tsx","../src/MenuItem.tsx","../src/SubtitleMenu.tsx","../src/ToggleButton.tsx","../src/TracklistMenu.tsx","../src/TimeUtils.ts","../src/AudioPlayer.tsx"],"sourcesContent":["const collapseArrayProperty = (prop: string|string[] = [], delimiter: string = ' ') => {\n  if (!Array.isArray(prop)) {\n    prop = [prop];\n  }\n  return prop.join(delimiter);\n};\n\nexport default collapseArrayProperty;\n","// @file\n// Screenreader only wrapper.\n\nimport React from 'react';\n\nimport CollapseArrayProperty from './Util/CollapseArrayProperty';\n\nimport { IAudioPlayerConfig } from './Types';\n\ninterface IProps {\n  children?: React.ReactNode;\n  config?: IAudioPlayerConfig;\n}\n\nconst SrOnly: React.FunctionComponent<IProps> = ({ config = {}, children }) => {\n  const classNames = [].concat(CollapseArrayProperty(config.classNames['sr-only']));\n  return <span className={classNames.join(' ')}>{children}</span>;\n};\n\nexport default SrOnly;\n","// @file\n// Generate BEM-scoped CSS classes.\n\nconst CssClasses = (\n  defaultClassName: string,\n  optionalClassName: string = '',\n  suffix: string = '',\n  states: any[] = [],\n): string => {\n  const classes = []\n    .concat(defaultClassName.split(/\\s+/))\n    .concat(optionalClassName.split(/\\s+/))\n    .filter((c) => c && c.length)\n    .map((c) => (suffix.length ? `${c}__${suffix}` : c));\n\n  return classes\n    .reduce(\n      (agg, className) =>\n        agg.concat(\n          ['']\n            .concat(states.filter((s) => s && s.length))\n            .map((state) => `${className}${state.length ? `--${state}` : ''}`),\n        ),\n      [],\n    )\n    .join(' ');\n};\n\nexport default CssClasses;\n","// @file\n// Functional component for an action button.\n\nimport React from 'react';\n\nimport SrOnly from './SrOnly';\nimport CollapseArrayProperty from './Util/CollapseArrayProperty';\nimport CssClasses from './Util/CssClasses';\n\nimport { IAudioPlayerConfig } from './Types';\n\ninterface IProps {\n  btnType: string;\n  enabled?: boolean;\n  hidden?: boolean;\n  onClick?: (e: React.MouseEvent) => void;\n  children?: React.ReactNode;\n  className?: string;\n  config?: IAudioPlayerConfig;\n}\n\nconst ActionButton: React.FunctionComponent<IProps> = ({\n  enabled = true,\n  hidden = false,\n  btnType,\n  onClick,\n  children,\n  className,\n  config = {},\n}) => {\n  const defaultClassName = CollapseArrayProperty(config.classNames[btnType]);\n  const iconClassNames = CollapseArrayProperty(config.icons[btnType]);\n  const iconElem = config.iconElements[btnType] || null;\n  return (\n    <button\n      className={CssClasses(defaultClassName, className || '')}\n      disabled={!enabled}\n      hidden={hidden}\n      onClick={onClick}\n    >\n      <SrOnly config={config}>{children}</SrOnly>\n      {!iconElem && <span className={CssClasses(iconClassNames, '')}></span>}\n      {iconElem}\n    </button>\n  );\n};\n\nexport default ActionButton;\n","export const clampNumber = (num: number, min: number, max: number): number =>\n  Math.max(min, Math.min(max, num));\n","// @file\n// Functional component for an action button.\n\nimport React from 'react';\nimport debounce from 'debounce';\n\nimport CssClasses from './Util/CssClasses';\nimport { clampNumber } from './Util/Numbers';\n\n/**\n * Note: defaultValue is between 0 and 100.\n */\ninterface IProps {\n  defaultValue: number;\n  className?: string;\n  id?: string;\n  label?: string;\n  onClick?: (pos: number) => void;\n  useTooltip?: boolean;\n  useRange?: boolean;\n  useProgress?: boolean;\n  valueToTooltipString?: (pos: number) => string;\n}\n\nconst getOffsetXNative = (\n  e: MouseEvent | TouchEvent,\n  container: HTMLDivElement,\n) => {\n  let offsetX = 0;\n  const rect = container.getBoundingClientRect();\n  if (e.type === 'mousemove') {\n    offsetX = (e as MouseEvent).pageX - rect.left;\n  }\n  if (e.type === 'touchmove') {\n    offsetX = (e as TouchEvent).targetTouches[0].pageX - rect.left;\n  }\n  return offsetX;\n};\n\nconst getOffsetX = (e: React.TouchEvent | React.MouseEvent) => {\n  if (typeof (e as React.MouseEvent).nativeEvent.offsetX === 'number') {\n    return (e as React.MouseEvent).nativeEvent.offsetX;\n  }\n  if (typeof (e as React.TouchEvent).targetTouches === 'object') {\n    const touchE = e as React.TouchEvent;\n    const rect = (touchE.target as HTMLDivElement).getBoundingClientRect();\n    return touchE.targetTouches[0].pageX - rect.left;\n  }\n  return 0;\n};\n\nconst ON_CLICK_DEBOUNCE = 250;\n\ninterface ITooltipProps {\n  title?: string;\n  className?: string;\n  style?: any;\n}\n\nconst ScrubBarTooltip: React.FunctionComponent<ITooltipProps> = ({\n  title,\n  className,\n  style = {},\n}) => {\n  return (\n    <div style={style} className={className || ''}>\n      {title}\n    </div>\n  );\n};\n\ninterface ITooltipOuterProps {\n  wrapperClassName?: string;\n  tooltipClassName?: string;\n  valueToTooltipString?: (pos: number) => string;\n  defaultValue?: number;\n  show?: boolean;\n}\n\nconst ScrubBarTooltipOuter: React.FunctionComponent<ITooltipOuterProps> = ({\n  wrapperClassName,\n  tooltipClassName,\n  valueToTooltipString = () => '',\n  defaultValue = 0,\n  show = false,\n}) => {\n  const outer = React.useRef(null);\n  const [value, setValue] = React.useState(defaultValue);\n\n  const outerWidth = outer.current ? outer.current.clientWidth : 0;\n\n  const content = valueToTooltipString(value) || '';\n\n  return (\n    <div\n      ref={outer}\n      onMouseMove={(e: React.MouseEvent) => {\n        setValue(getOffsetX(e) / outerWidth);\n      }}\n      className={wrapperClassName}\n    >\n      {show && content.length > 0 && (\n        <ScrubBarTooltip\n          title={valueToTooltipString(value)}\n          className={tooltipClassName}\n          style={{\n            left: `${outerWidth * value}px`,\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nconst ScrubBar: React.FunctionComponent<IProps> = ({\n  defaultValue = 0,\n  useTooltip = false,\n  useRange = false,\n  useProgress = false,\n  valueToTooltipString = () => '',\n  id,\n  className,\n  label,\n  onClick,\n}: IProps) => {\n  const outer = React.useRef(null);\n  const scrubbing = React.useRef(false);\n\n  const [hover, setHover] = React.useState(false);\n  const [value, setValue] = React.useState(clampNumber(defaultValue, 0, 1));\n  const [offsetX, setOffsetX] = React.useState(0);\n  const [lastUpdate, setLastUpdate] = React.useState(0);\n\n  const derivedId = id || 'scrub-bar';\n\n  const debouncedOnClick =\n    typeof onClick === 'function'\n      ? debounce(onClick, ON_CLICK_DEBOUNCE)\n      : () => {};\n\n  const onDown = (e: React.TouchEvent | React.MouseEvent) => {\n    scrubbing.current = true;\n    setOffsetX(getOffsetX(e));\n  };\n\n  const onUp = () => {\n    if (scrubbing.current) {\n      scrubbing.current = false;\n      setLastUpdate(new Date().getTime());\n    }\n  };\n\n  const onMouseMove = (e: MouseEvent) => {\n    if (scrubbing.current) {\n      setOffsetX(getOffsetXNative(e, outer.current));\n    }\n  };\n\n  const onTouchMove = (e: TouchEvent) => {\n    if (scrubbing.current) {\n      setOffsetX(getOffsetXNative(e, outer.current));\n    }\n  };\n\n  // Set up cursor move and cursor up events on the entire document\n  // so that the scrub can persist even when the user drags outside\n  // the scrub bar.\n  React.useEffect(() => {\n    document.addEventListener('mousemove', onMouseMove, false);\n    document.addEventListener('touchmove', onTouchMove, false);\n    document.addEventListener('mouseup', onUp, false);\n    document.addEventListener('touchend', onUp, false);\n    return () => {\n      document.removeEventListener('mousemove', onMouseMove, false);\n      document.removeEventListener('touchmove', onTouchMove, false);\n      document.removeEventListener('mouseup', onUp, false);\n      document.removeEventListener('touchend', onUp, false);\n    };\n  }, []);\n\n  // Prop update -- set value, don't propagate.\n  React.useEffect(() => {\n    setValue(clampNumber(defaultValue, 0, 100));\n  }, [defaultValue]);\n\n  // State update -- set value, propagate back to parent.\n  React.useEffect(() => {\n    if (scrubbing.current) {\n      const pos = clampNumber(offsetX / outer.current.clientWidth, 0, 1);\n      setValue(pos * 100);\n      debouncedOnClick(pos);\n    }\n  }, [lastUpdate, offsetX]);\n\n  return (\n    <div\n      className={CssClasses(className || '', '', '', [\n        scrubbing.current ? 'scrubbing' : '',\n      ])}\n      onMouseOver={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onMouseDown={useRange ? () => {} : onDown}\n      onTouchStart={useRange ? () => {} : onDown}\n      ref={outer}\n    >\n      {useTooltip && (\n        <ScrubBarTooltipOuter\n          wrapperClassName={`${className}__wraptooltip`}\n          tooltipClassName={`${className}__tooltip`}\n          show={hover || scrubbing.current}\n          valueToTooltipString={valueToTooltipString}\n          defaultValue={value}\n        />\n      )}\n      {(useProgress || useRange) && (\n        <label\n          htmlFor={\n            useRange ? `${derivedId}__scrubrange` : `${derivedId}__progress`\n          }\n        >\n          <span className=\"sr-only\">\n            {label || ''}\n            {`${value} percent`}\n          </span>\n          {useProgress && (\n            <progress\n              max=\"100\"\n              value={value}\n              className={`${className}__progress`}\n              id={`${derivedId}__progress`}\n            />\n          )}\n          {useRange && (\n            <input\n              className={`${className}__scrubrange`}\n              id={`${derivedId}__scrubrange`}\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={value}\n              onMouseDown={onDown}\n              onTouchStart={onDown}\n              onChange={(e) => {\n                setOffsetX(\n                  (parseFloat(e.currentTarget.value) / 100.0) *\n                    outer.current.clientWidth,\n                );\n              }}\n            />\n          )}\n        </label>\n      )}\n      {!useRange && (\n        <div\n          className={[`${className}__fill`].join(' ')}\n          style={{ width: `${value}%` }}\n        >\n          <span className=\"sr-only\">\n            {label || ''}\n            {`${value} percent`}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScrubBar;\n","// @file\n// Oral Histories subtitle menu.\n\nimport React from 'react';\n\nconst memoiseTrack = (track: TextTrack): string => {\n  if (!track) {\n    return '';\n  }\n  const { kind, mode, language, cues } = track;\n  return [kind, mode, language, cues.length].join(',');\n};\n\ninterface IProps {\n  visible?: boolean;\n  lang?: string;\n  tracks: TextTrack[];\n  id: string;\n  className?: string;\n}\n\nconst SubtitleContainer: React.FunctionComponent<IProps> = ({\n  visible = true,\n  lang,\n  tracks = [],\n  id,\n  className,\n}: IProps) => {\n  const [text, setText] = React.useState('');\n  const [currentTrack, setCurrentTrack] = React.useState(null);\n\n  const cueChange = (e: Event) => {\n    const { activeCues } = e.target as TextTrack;\n\n    let newText = '';\n    let cue;\n\n    let i;\n    for (i = 0; i < activeCues.length; i += 1) {\n      cue = activeCues[i];\n      if (typeof (cue as any).text !== 'undefined') {\n        newText += (cue as any).text;\n      }\n    }\n    setText(newText);\n  };\n\n  React.useEffect(() => {\n    if (currentTrack) {\n      currentTrack.addEventListener('cuechange', cueChange, false);\n    }\n    return () => {\n      if (currentTrack) {\n        currentTrack.removeEventListener('cuechange', cueChange, false);\n      }\n    };\n  }, [memoiseTrack(currentTrack)]);\n\n  React.useEffect(() => {\n    if (lang && lang.length && tracks && tracks.length) {\n      let track = null;\n      let i;\n      for (i = 0; i < tracks.length; i += 1) {\n        if (tracks[i].language === lang) {\n          track = tracks[i];\n          break;\n        }\n      }\n      setCurrentTrack(track);\n    }\n  }, [lang, tracks]);\n\n  return (\n    <div\n      className={[className || '', 'video-wrapper__subtitle-container'].join(\n        ' ',\n      )}\n      hidden={!visible}\n      aria-hidden={!visible}\n      lang={lang}\n      id={id}\n      aria-atomic=\"true\"\n      aria-live=\"polite\"\n      aria-relevant=\"additions text\"\n    >\n      {visible ? text : ' '}\n    </div>\n  );\n};\n\nexport default SubtitleContainer;\n","// @file\r\n// Menu container.\r\n\r\nimport React from 'react';\r\n\r\ninterface IProps {\r\n  id?: string;\r\n  visible?: boolean;\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst Menu: React.FunctionComponent<IProps> = ({\r\n  id,\r\n  visible = false,\r\n  className,\r\n  children,\r\n}: IProps) => {\r\n  return (\r\n    <ol\r\n      className={['video-wrapper__popup-menu', className || ''].join(' ')}\r\n      id={id}\r\n      hidden={!visible}\r\n      aria-expanded={visible}\r\n    >\r\n      {children}\r\n    </ol>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\n\ninterface IProps {\n  label: string;\n  value: string | number | null;\n  selected: boolean;\n  onSelect: (e: React.KeyboardEvent | React.MouseEvent) => void;\n}\n\nconst MenuItem: React.FunctionComponent<IProps> = ({\n  label,\n  value,\n  selected = false,\n  onSelect,\n}: IProps) => {\n  return (\n    <li>\n      <button\n        data-value={value}\n        data-state={selected ? 'active' : 'inactive'}\n        onClick={onSelect}\n        onKeyUp={(e) => {\n          if (e.key === 'Enter') {\n            onSelect(e);\n          }\n        }}\n      >\n        {label}\n      </button>\n    </li>\n  );\n};\n\nexport default MenuItem;\n","// @file\n// Oral Histories subtitle menu.\n\nimport React from 'react';\n\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\n\ninterface IProps {\n  visible: boolean;\n  id: string;\n  tracks: TextTrackList;\n  selected?: string;\n  onSelect: (selectedLang: string) => void;\n  className?: string;\n}\n\nconst SubtitleMenu: React.FunctionComponent<IProps> = ({\n  visible = false,\n  id,\n  tracks,\n  selected,\n  onSelect,\n  className,\n}: IProps) => {\n  const onSelectLang = (e: React.MouseEvent | React.KeyboardEvent) => {\n    const itemElem = e.target as HTMLElement;\n    const selectedLang = itemElem.getAttribute('data-value') || null;\n    if (typeof onSelect === 'function') {\n      onSelect(selectedLang);\n    }\n  };\n\n  const languageOptions = [\n    <MenuItem\n      key={'_none_'}\n      label={'Off'}\n      value={null}\n      selected={!selected}\n      onSelect={onSelectLang}\n    />,\n  ];\n  let track;\n  let i;\n  if (tracks && tracks.length) {\n    for (i = 0; i < tracks.length; i += 1) {\n      track = tracks[i];\n      languageOptions.push(\n        <MenuItem\n          key={`${track.language}-${i}`}\n          label={track.label}\n          value={track.language}\n          selected={selected && track.language === selected}\n          onSelect={onSelectLang}\n        />,\n      );\n    }\n  }\n\n  return (\n    <Menu\n      className={[className || '', 'subtitles-menu'].join(' ')}\n      id={id}\n      visible={visible}\n    >\n      {languageOptions}\n    </Menu>\n  );\n};\n\nexport default SubtitleMenu;\n","// @file\n// Functional component for a toggle button.\n\nimport React from 'react';\n\nimport SrOnly from './SrOnly';\nimport CollapseArrayProperty from './Util/CollapseArrayProperty';\nimport CssClasses from './Util/CssClasses';\n\nimport { IAudioPlayerConfig } from './Types';\n\ninterface IProps {\n  enabled?: boolean;\n  hidden?: boolean;\n  btnType: string;\n  toggleState?: boolean;\n  children?: React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n  className?: string;\n  config?: IAudioPlayerConfig;\n}\n\nconst ToggleButton: React.FunctionComponent<IProps> = ({\n  enabled = true,\n  hidden = false,\n  btnType,\n  toggleState = false,\n  children,\n  onClick,\n  className,\n  config = {},\n}: IProps) => {\n  const defaultClassName = CollapseArrayProperty(config.classNames[btnType]);\n  const iconClassNamesFalse = CollapseArrayProperty(config.icons[`${btnType}__false`]);\n  const iconClassNamesTrue = CollapseArrayProperty(config.icons[`${btnType}__true`]);\n  const iconElemFalse = config.iconElements[`${btnType}__false`] || null;\n  const iconElemTrue = config.iconElements[`${btnType}__true`] || null;\n  return (\n    <button\n      className={CssClasses(defaultClassName, className || '')}\n      disabled={!enabled}\n      hidden={hidden}\n      onClick={onClick}\n    >\n      <SrOnly config={config}>{children}</SrOnly>\n      {!toggleState && !iconElemFalse && (\n        <span className={CssClasses(iconClassNamesFalse)} />\n      )}\n      {!toggleState && iconElemFalse}\n      {toggleState && !iconElemTrue && (\n        <span className={CssClasses(iconClassNamesTrue)} />\n      )}\n      {toggleState && iconElemTrue}\n    </button>\n  );\n};\n\nexport default ToggleButton;\n","// @file\r\n// Oral Histories subtitle menu.\r\n\r\nimport React from 'react';\r\n\r\nimport Menu from './Menu';\r\nimport MenuItem from './MenuItem';\r\n\r\ninterface IProps {\r\n  tracklist?: any[];\r\n  selected?: number;\r\n  onSelect?: (track: number) => void;\r\n  id?: string;\r\n  visible?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst TracklistMenu: React.FunctionComponent<IProps> = ({\r\n  tracklist = [],\r\n  selected = 0,\r\n  visible = false,\r\n  onSelect,\r\n  id,\r\n  className,\r\n}: IProps) => {\r\n  const onSelectTrack = (e: React.MouseEvent | React.KeyboardEvent) => {\r\n    const itemElem = e.target as HTMLElement;\r\n    const indexAttr = itemElem.getAttribute('data-value') || null;\r\n    if (indexAttr === null) {\r\n      return;\r\n    }\r\n    const index = parseInt(indexAttr, 10);\r\n    if (typeof onSelect === 'function') {\r\n      onSelect(index);\r\n    }\r\n  };\r\n\r\n  const trackOptions = tracklist.map((track: any, index: number) => {\r\n    return (\r\n      <MenuItem\r\n        key={index}\r\n        label={track.label}\r\n        value={index}\r\n        selected={index === selected}\r\n        onSelect={onSelectTrack}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Menu\r\n      className={[className || '', 'track-menu'].join(' ')}\r\n      id={id}\r\n      visible={visible}\r\n    >\r\n      {trackOptions}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default TracklistMenu;\r\n","// @file\n// Time utilities.\n\nconst strPadLeft = (n: number): string => {\n  if (n < 10) {\n    return `0${n}`;\n  }\n  return n.toString();\n};\n\nexport const toHHMMSS = (str: string): string => {\n  const secNum = parseInt(str, 10);\n  if (isNaN(secNum)) {\n    return '';\n  }\n  const hours = Math.floor(secNum / 3600);\n  const minutes = Math.floor((secNum - hours * 3600) / 60);\n  const seconds = secNum - hours * 3600 - minutes * 60;\n\n  return `${strPadLeft(hours)}:${strPadLeft(minutes)}:${strPadLeft(seconds)}`;\n};\n\nexport const toMMSS = (str: string): string => {\n  const secNum = parseInt(str, 10);\n  if (isNaN(secNum)) {\n    return '';\n  }\n  const minutes = Math.floor(secNum / 60);\n  const seconds = secNum - minutes * 60;\n\n  return `${strPadLeft(minutes)}:${strPadLeft(seconds)}`;\n};\n","// @file\n// Audio player base component.\n\nimport Emitter from 'eventemitter3';\nimport React from 'react';\n\nimport ActionButton from './ActionButton';\nimport ScrubBar from './ScrubBar';\nimport SubtitleContainer from './SubtitleContainer';\nimport SubtitleMenu from './SubtitleMenu';\nimport ToggleButton from './ToggleButton';\nimport TracklistMenu from './TracklistMenu';\n\nimport FontAwesome5 from './Configs/FontAwesome5';\nimport CssClasses from './Util/CssClasses';\nimport { toHHMMSS, toMMSS } from './TimeUtils';\nimport { IAudioPlayerConfig } from './Types';\n\ninterface IPlaylistItem {\n  index: number;\n  label: string;\n  audioUrl: string;\n  transcriptUrl: string | null;\n}\n\ninterface IPlaybackEvent {\n  fileData?: any[];\n  selectedFile?: number;\n  currentTime?: number;\n  duration?: number;\n}\n\ninterface IProps {\n  playlist: IPlaylistItem[];\n  id?: string;\n  className?: string;\n  eventRouter?: Emitter;\n  crossOrigin?: 'anonymous' | 'use-credentials';\n  onEndNextFile?: boolean;\n  config?: IAudioPlayerConfig;\n  singleTrack?: boolean;\n  useRangeOnScrubBar?: boolean;\n  useProgressOnScrubBar?: boolean;\n  onLoad?: (e?: IPlaybackEvent) => void;\n  onPlay?: (e?: IPlaybackEvent) => void;\n  onPause?: (e?: IPlaybackEvent) => void;\n  onEnd?: (e?: IPlaybackEvent) => void;\n  onTimeUpdate?: (e?: IPlaybackEvent) => void;\n}\n\nconst AudioPlayer: React.FunctionComponent<IProps> = ({\n  playlist = [],\n  id = 'audio-player',\n  className,\n  eventRouter,\n  crossOrigin,\n  onEndNextFile = false,\n  config = {},\n  singleTrack = false,\n  useRangeOnScrubBar = false,\n  useProgressOnScrubBar = false,\n  onLoad,\n  onPlay,\n  onPause,\n  onEnd,\n  onTimeUpdate,\n}: IProps) => {\n  const audioElem = React.useRef(null);\n  const timeElapsedElem = React.useRef(null);\n  const durationElem = React.useRef(null);\n\n  const [duration, setDuration] = React.useState(0);\n  const [timestamp, setTimestamp] = React.useState(0);\n  const [fileData, setFileData] = React.useState([]);\n  const [selectedFile, setSelectedFile] = React.useState(0);\n  const [progress, setProgress] = React.useState(0);\n  const [playing, setPlaying] = React.useState(false);\n  const [ended, setEnded] = React.useState(false);\n  const [muted, setMuted] = React.useState(false);\n  const [selectedLanguage, setSelectedLanguage] = React.useState(null);\n  const [showTrackListMenu, setShowTrackListMenu] = React.useState(false);\n  const [showSubtitleMenu, setShowSubtitleMenu] = React.useState(false);\n  const [videoMetadataLoaded, setVideoMetadataLoaded] = React.useState(false);\n\n  const captionsContainerId = `${id}__captions`;\n  const timeIndicatorId = `${id}__time-indicator`;\n  const durationIndicatorId = `${id}__duration-indicator`;\n  const tracklistId = `${id}__track-list`;\n  const subtitleMenuId = `${id}__subtitle-menu`;\n\n  const getTimestampString = (\n    seconds: number = 0,\n    isDuration: boolean = false,\n  ): string => {\n    if (typeof seconds !== 'number') {\n      return '';\n    }\n    if (\n      config.useHoursInTimestamps &&\n      ((isDuration && seconds >= 3600) || duration >= 3600)\n    ) {\n      return toHHMMSS(seconds.toString());\n    }\n    return toMMSS(seconds.toString());\n  };\n\n  React.useEffect(() => {\n    audioElem.current.setAttribute('playsinline', 'playsinline');\n  }, []);\n\n  React.useEffect(() => {\n    setFileData(playlist);\n    setSelectedFile(0);\n  }, [playlist]);\n\n  const canPlayPrev = selectedFile > 0;\n  const canPlayNext = selectedFile < fileData.length - 1;\n\n  React.useEffect(() => {\n    audioElem.current.load();\n    audioElem.current.currentTime = 0;\n    setProgress(0);\n  }, [selectedFile]);\n\n  const selectTrack = (trackNumber: number) => {\n    setPlaying(false);\n    setEnded(false);\n    setVideoMetadataLoaded(false);\n    setSelectedFile(trackNumber);\n    if (typeof onLoad === 'function') {\n      onLoad({ fileData, selectedFile: trackNumber, duration });\n    }\n  };\n\n  const hasVtt = (file: IPlaylistItem) => {\n    return file.transcriptUrl && file.transcriptUrl.length > 0;\n  };\n\n  const subtitleTracks = () => {\n    if (!videoMetadataLoaded) {\n      return [];\n    }\n    return audioElem.current.textTracks;\n  };\n\n  const playable = fileData && fileData.length && videoMetadataLoaded;\n\n  const selectSubtitleLanguage = (lang?: string) => {\n    setShowSubtitleMenu(false);\n    setSelectedLanguage(lang && lang.length ? lang : null);\n  };\n\n  const onLoadedMetadata = () => {\n    setVideoMetadataLoaded(true);\n    selectSubtitleLanguage(selectedLanguage);\n    setDuration(audioElem.current.duration);\n\n    // this.highlighter.selectedFile = this.state.selectedFile;\n    // this.highlighter.updateVideoElement(this.videoElement);\n    // this.highlighter.onVideoElementLoad();\n  };\n\n  const internalOnTimeUpdate = () => {\n    const currentTime = audioElem.current.currentTime;\n    if (duration > 0) {\n      const value = (100 / duration) * currentTime;\n      setProgress(value);\n      setTimestamp(currentTime);\n    }\n    if (typeof onTimeUpdate === 'function') {\n      onTimeUpdate({ fileData, selectedFile, currentTime, duration });\n    }\n  };\n\n  const playPauseAction = () => {\n    if (!playable) {\n      return;\n    }\n    let newPlaying = false;\n    if (audioElem.current.paused) {\n      audioElem.current.play();\n      newPlaying = true;\n    } else {\n      audioElem.current.pause();\n    }\n    const currentTime = audioElem.current.currentTime;\n    setPlaying(newPlaying);\n    setTimestamp(currentTime);\n    if (eventRouter) {\n      eventRouter.emit('state.playing', newPlaying);\n    }\n    if (newPlaying) {\n      if (typeof onPlay === 'function') {\n        onPlay({ fileData, selectedFile, currentTime, duration });\n      }\n    } else {\n      if (typeof onPause === 'function') {\n        onPause({ fileData, selectedFile, currentTime, duration });\n      }\n    }\n  };\n\n  const nextTrackAction = () => {\n    if (canPlayNext) {\n      selectTrack(selectedFile + 1);\n    }\n  };\n\n  const nextTrackAndPlayAction = () => {\n    if (canPlayNext) {\n      nextTrackAction();\n      setTimeout(() => playPauseAction(), 500);\n    }\n  };\n\n  const onEnded = () => {\n    if (onEndNextFile) {\n      nextTrackAndPlayAction();\n      return;\n    }\n    setEnded(true);\n    const currentTime = audioElem.current.currentTime;\n    setTimestamp(currentTime);\n    if (eventRouter) {\n      eventRouter.emit('state.playing', false);\n      eventRouter.emit('state.ended', true);\n    }\n    if (typeof onEnd === 'function') {\n      onEnd({ fileData, selectedFile, currentTime, duration });\n    }\n  };\n\n  const moveBackwardAction = () => {\n    if (!playable) {\n      return;\n    }\n    audioElem.current.currentTime -= config.rewindTime || 5;\n  };\n\n  const moveForwardAction = () => {\n    if (!playable) {\n      return;\n    }\n    audioElem.current.currentTime += config.fastForwardTime || 5;\n  };\n\n  const rewindAction = () => {\n    audioElem.current.currentTime = 0;\n    setEnded(false);\n    setTimestamp(audioElem.current.currentTime);\n    setProgress(0);\n    if (eventRouter) {\n      eventRouter.emit('state.ended', false);\n    }\n  };\n\n  React.useEffect(() => {\n    let i;\n    for (i = 0; i < audioElem.current.textTracks.length; i += 1) {\n      audioElem.current.textTracks[i].mode =\n        audioElem.current.textTracks[i].language === selectedLanguage\n          ? 'showing'\n          : 'hidden';\n    }\n  }, [selectedLanguage]);\n\n  const toggleMuteAction = () => {\n    const newMute = !audioElem.current.muted;\n    audioElem.current.muted = newMute;\n    setMuted(newMute);\n  };\n\n  const handleRemoteAction = (action: string) => {\n    if (action === 'backward') {\n      moveBackwardAction();\n    } else if (action === 'play_pause') {\n      playPauseAction();\n    } else if (action === 'reset') {\n      rewindAction();\n    } else if (action === 'forward') {\n      moveForwardAction();\n    }\n  };\n\n  React.useEffect(() => {\n    if (eventRouter) {\n      eventRouter.on('remote.action', handleRemoteAction);\n    }\n    return () => {\n      if (eventRouter) {\n        eventRouter.off('remote.action', handleRemoteAction);\n      }\n    };\n  }, []);\n\n  const currentFile = fileData[selectedFile] || null;\n\n  return (\n    <div className={CssClasses('video-wrapper', className)}>\n      <audio\n        className={CssClasses('video-element', className)}\n        data-oh-audio-player=\"1\"\n        crossOrigin={crossOrigin}\n        preload=\"metadata\"\n        ref={audioElem}\n        onLoadedMetadata={onLoadedMetadata}\n        onEnded={onEnded}\n        onTimeUpdate={internalOnTimeUpdate}\n        aria-describedby={captionsContainerId}\n      >\n        {currentFile && <source src={currentFile.audioUrl} type=\"audio/mpeg\" />}\n        {currentFile && hasVtt(currentFile) && (\n          <track\n            src={currentFile.transcriptUrl}\n            kind=\"captions\"\n            label=\"English\"\n            srcLang=\"en\"\n          />\n        )}\n      </audio>\n\n      <div className={CssClasses('video-controls', className)}>\n        <ScrubBar\n          defaultValue={progress}\n          className={CssClasses('video-controls', className, 'progress-bar')}\n          onClick={(pos: number) => {\n            audioElem.current.currentTime = pos * duration;\n            setTimestamp(pos * duration);\n          }}\n          useTooltip={config.useTooltip || false}\n          useRange={useRangeOnScrubBar}\n          useProgress={useProgressOnScrubBar}\n          valueToTooltipString={(pos) =>\n            getTimestampString(\n              audioElem.current ? pos * audioElem.current.duration : 0,\n            )\n          }\n        />\n\n        <label className=\"sr-only\" htmlFor={timeIndicatorId}>\n          Time elapsed\n        </label>\n\n        <input\n          className={CssClasses('video-controls', className, 'time-elapsed')}\n          id={timeIndicatorId}\n          readOnly\n          ref={timeElapsedElem}\n          value={getTimestampString(timestamp)}\n        />\n\n        {config.showDuration && (\n          <>\n            <label className=\"sr-only\" htmlFor={durationIndicatorId}>\n              Duration\n            </label>\n\n            <input\n              className={CssClasses('video-controls', className, 'duration')}\n              id={durationIndicatorId}\n              readOnly\n              ref={durationElem}\n              value={getTimestampString(duration, true)}\n            />\n          </>\n        )}\n\n        <div className=\"w-100\" />\n\n        <div\n          className={CssClasses('video-controls', className, 'button-wrapper')}\n        >\n          <ToggleButton\n            btnType=\"tracklist\"\n            aria-controls={tracklistId}\n            enabled={fileData.length > 0 && !singleTrack}\n            onClick={() => {\n              setShowSubtitleMenu(false);\n              setShowTrackListMenu(!showTrackListMenu);\n            }}\n            toggleState={showTrackListMenu}\n            config={config}\n          >\n            Tracklist\n          </ToggleButton>\n\n          <div\n            className={CssClasses(\n              'video-controls',\n              className,\n              'button-wrapper__space',\n            )}\n          />\n\n          <ActionButton\n            btnType=\"previous-audio\"\n            enabled={fileData.length > 1 && canPlayPrev}\n            onClick={() => {\n              if (canPlayPrev) {\n                selectTrack(selectedFile - 1);\n              }\n            }}\n            config={config}\n          >\n            Previous track\n          </ActionButton>\n\n          <ActionButton\n            btnType=\"backward\"\n            onClick={moveBackwardAction}\n            config={config}\n          >\n            Rewind\n          </ActionButton>\n\n          <ToggleButton\n            btnType=\"play\"\n            hidden={ended}\n            onClick={playPauseAction}\n            toggleState={playing}\n            config={config}\n          >\n            {playing ? 'Pause' : 'Play'}\n          </ToggleButton>\n\n          <ActionButton\n            btnType=\"reset\"\n            enabled={ended}\n            hidden={!ended}\n            onClick={rewindAction}\n            config={config}\n          >\n            Restart\n          </ActionButton>\n\n          <ActionButton\n            btnType=\"forward\"\n            onClick={moveForwardAction}\n            config={config}\n          >\n            Fast forward\n          </ActionButton>\n\n          <ActionButton\n            btnType=\"next-audio\"\n            enabled={fileData.length > 1 && canPlayNext}\n            onClick={nextTrackAction}\n            config={config}\n          >\n            Next track\n          </ActionButton>\n\n          <ToggleButton\n            btnType=\"closed-captioning\"\n            aria-controls={subtitleMenuId}\n            enabled={videoMetadataLoaded && hasVtt(currentFile)}\n            onClick={() => {\n              setShowTrackListMenu(false);\n              setShowSubtitleMenu(!showSubtitleMenu);\n            }}\n            toggleState={showSubtitleMenu}\n            config={config}\n          >\n            Closed captioning\n          </ToggleButton>\n\n          <div\n            className={CssClasses(\n              'video-controls',\n              className,\n              'button-wrapper__space',\n            )}\n          />\n\n          <ToggleButton\n            btnType=\"mute\"\n            onClick={toggleMuteAction}\n            toggleState={muted}\n            config={config}\n          >\n            Mute\n          </ToggleButton>\n        </div>\n      </div>\n\n      <SubtitleMenu\n        visible={showSubtitleMenu}\n        id={subtitleMenuId}\n        tracks={subtitleTracks()}\n        selected={selectedLanguage}\n        onSelect={selectSubtitleLanguage}\n      />\n\n      <TracklistMenu\n        visible={!singleTrack && showTrackListMenu}\n        id={tracklistId}\n        tracklist={fileData}\n        selected={selectedFile}\n        onSelect={(trackNumber) => {\n          setShowTrackListMenu(false);\n          selectTrack(trackNumber);\n        }}\n      />\n\n      <SubtitleContainer\n        visible={selectedLanguage !== null}\n        lang={selectedLanguage}\n        tracks={subtitleTracks()}\n        id={captionsContainerId}\n      />\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n\nexport const defaultConfigs = {\n  FontAwesome5,\n};\n"],"names":["collapseArrayProperty","prop","delimiter","Array","isArray","join","SrOnly","_ref","config","children","classNames","concat","CollapseArrayProperty","_ref$config","React","className","CssClasses","defaultClassName","optionalClassName","suffix","states","split","filter","c","length","map","reduce","agg","s","state","ActionButton","enabled","_ref$enabled","_ref$hidden","hidden","btnType","onClick","iconClassNames","icons","iconElem","iconElements","disabled","clampNumber","num","min","max","Math","getOffsetXNative","e","container","offsetX","rect","getBoundingClientRect","type","pageX","left","targetTouches","getOffsetX","nativeEvent","touchE","target","ScrubBarTooltip","_ref$style","style","title","ScrubBarTooltipOuter","_ref2","wrapperClassName","tooltipClassName","_ref2$valueToTooltipS","valueToTooltipString","_ref2$defaultValue","defaultValue","_ref2$show","show","outer","useRef","_React$useState","useState","value","setValue","outerWidth","current","clientWidth","content","ref","onMouseMove","ScrubBar","_ref3","_ref3$defaultValue","_ref3$useTooltip","useTooltip","_ref3$useRange","useRange","_ref3$useProgress","useProgress","_ref3$valueToTooltipS","id","label","scrubbing","_React$useState2","hover","setHover","_React$useState3","_React$useState4","setOffsetX","_React$useState5","lastUpdate","setLastUpdate","derivedId","debouncedOnClick","debounce","onDown","onUp","Date","getTime","onTouchMove","useEffect","document","addEventListener","removeEventListener","pos","onMouseOver","onMouseLeave","onMouseDown","onTouchStart","htmlFor","onChange","parseFloat","currentTarget","width","SubtitleContainer","track","visible","_ref$visible","lang","_ref$tracks","tracks","text","setText","currentTrack","setCurrentTrack","cueChange","cue","i","activeCues","newText","kind","mode","language","cues","Menu","MenuItem","_ref$selected","selected","onSelect","onKeyUp","key","SubtitleMenu","onSelectLang","selectedLang","getAttribute","languageOptions","push","ToggleButton","_ref$toggleState","toggleState","iconClassNamesFalse","iconClassNamesTrue","iconElemFalse","iconElemTrue","TracklistMenu","tracklist","onSelectTrack","indexAttr","index","parseInt","trackOptions","_ref$tracklist","strPadLeft","n","toString","playlist","_ref$playlist","_ref$id","eventRouter","crossOrigin","_ref$onEndNextFile","onEndNextFile","_ref$singleTrack","singleTrack","_ref$useRangeOnScrubB","useRangeOnScrubBar","_ref$useProgressOnScr","useProgressOnScrubBar","onLoad","onPlay","onPause","onEnd","onTimeUpdate","audioElem","timeElapsedElem","durationElem","duration","setDuration","timestamp","setTimestamp","fileData","setFileData","selectedFile","setSelectedFile","progress","setProgress","_React$useState6","playing","setPlaying","_React$useState7","ended","setEnded","_React$useState8","muted","setMuted","_React$useState9","selectedLanguage","setSelectedLanguage","_React$useState10","showTrackListMenu","setShowTrackListMenu","_React$useState11","showSubtitleMenu","setShowSubtitleMenu","_React$useState12","videoMetadataLoaded","setVideoMetadataLoaded","captionsContainerId","timeIndicatorId","durationIndicatorId","tracklistId","subtitleMenuId","getTimestampString","seconds","isDuration","useHoursInTimestamps","str","secNum","isNaN","hours","floor","minutes","toHHMMSS","toMMSS","setAttribute","canPlayPrev","canPlayNext","load","currentTime","selectTrack","trackNumber","hasVtt","file","transcriptUrl","subtitleTracks","textTracks","playable","selectSubtitleLanguage","playPauseAction","newPlaying","paused","play","pause","emit","nextTrackAction","moveBackwardAction","rewindTime","moveForwardAction","fastForwardTime","rewindAction","handleRemoteAction","action","on","off","currentFile","preload","onLoadedMetadata","onEnded","setTimeout","src","audioUrl","srcLang","readOnly","showDuration","newMute"],"mappings":"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"}